PART
{
	name = bluedog_Apollo_Block2_Heatshield
	module = Part
	author = CobaltWolf
MODEL
{
	model = Bluedog_DB/Parts/Apollo/bluedog_Apollo_Block2_Heatshield
}
	scale = 1
	rescaleFactor = 1
	node_stack_top = 0.0, 0.14, 0.0, 0.0, 1.0, 0.0, 2
	node_stack_bottom = 0.0, 0.14, 0.0, 0.0, -1.0, 0.0, 2
	CoPOffset = 0.0, 1.1, 0.0
	CoLOffset = 0.0, -0.36, 0.0
	fx_gasBurst_white = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, decouple
	sound_vent_large = decouple
	TechRequired = commandModules
	entryCost = 1200
	cost = 600
	category = Thermal
	subcategory = 0
	title = Kane-11-MSHS 2.5m Heat Shield
	manufacturer = Bluedog Design Bureau
	description = Large 2.5m structural heatshield for Kane CSM. It is very thick in order to withstand the intense heat of munar reentries. Remove some of the ablator for Kerbin orbital missions, to save weight. The structure itself is lighter as well, at the cost of removing the jettison hardware. Make sure your parachutes can stop the weight of the capsule and the heatshield.
	attachRules = 1,0,1,0,0
	mass = 0.5
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	breakingForce = 200
	breakingTorque = 200
	crashTolerance = 9
	maxTemp = 3300
	fuelCrossFeed = False
	PhysicsSignificance = 0
	stageOffset = 1
	childStageOffset = 1
	thermalMassModifier = 1.0
	bulkheadProfiles = size2

	tags = ablat drag entry insulate protect re- rocket therm Apollo Kane block ?1 ?2 ?3 ?4 ?5 ?i ?ii ?iii ?iv ?v

//	MODULE
//	{
//		name = ModuleJettison
//		jettisonName = fairing
//		bottomNodeName = bottom
//		isFairing = True
//		jettisonedObjectMass = 0.5
//		jettisonForce = 15
//		jettisonDirection = 0 0 1
//		stagingEnabled = False
//		checkBottomNode = True
//	}	

//	MODULE
//	{
//		name = ModuleDecouple
//		ejectionForce = 100
//		isOmniDecoupler = true
//		menuName = Jettison Heat Shield
//		stagingEnabled = False
//		stagingEnableText = HS Jettison Not Staged
//		stagingDisableText = HS Jettison Staged
//	}

	MODULE
	{
		name = ModuleAblator
		ablativeResource = Ablator
		lossExp = -7500
		lossConst = 0.1
		pyrolysisLossFactor = 6000
		reentryConductivity = 0.01
		ablationTempThresh = 500
	}
	
	RESOURCE
	{
		name = Ablator
		amount = 800
		maxAmount = 800
	}

	MODULE
	{
		name = ModuleTestSubject
		useStaging = False
		useEvent = True
		situationMask = 15
		CONSTRAINT
		{
			type = ATMOSPHERE
			value = True
		}
		CONSTRAINT
		{
			// prelaunch only at home
			// our main situationMask above includes prelaunch
			// but if nothome, here, and that mask with this value (11)
			// which excludes prelaunch
			type = SITUATION
			value = 11
			body = _NotHome
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 350
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 250
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 500
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 300
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 600
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 400
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1500
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 1000
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2500
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 1500
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 6000
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 2000
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = DENSITY
			test = LT
			value = 0.1
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 6000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 8000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 12000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 12000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 16000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
	}
	
}
