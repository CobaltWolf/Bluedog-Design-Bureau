PART
{

// --- general parameters ---
name = BDB_FASAlaunchClampApollo
module = Part
author = Frizzank

MODEL
{
  model = Bluedog_DB/Parts/LaunchClamps/FASA_Launch_Clamp_125/FASA_Launch_Clamp_Apollo
}
rescaleFactor = 1.0
scale = 1.0

// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
node_attach = 0.0, 1.9, 2.0, 0.0, 0.0, -1.0

// --- FX definitions ---

fx_gasBurst_white = 0.0, 3.0, 0.56, 0.0, 0.0, 1.0, activate
sound_decoupler_fire = activate


// --- editor parameters ---
TechRequired = specializedConstruction
entryCost = 1500
cost = 1500
category = Structural
subcategory = 0
title = FASA Apollo Launch Clamp
manufacturer = FASA
description = Similar to the clamps that held the Saturn V down while the engines spooled up. The clamp had a special hood it retracted into. It protect the clamps from rocket exhaust so they could be reused for multiple launches.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 0,1,0,1,1

// --- standard part parameters ---
mass = 0.1
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 1000
maxTemp = 15000
	emissiveConstant = 0.90
	heatConductivity = 0.001 //They have built in insulators
	thermalMassModifier = 15
	radiatorHeadroom = 0.75
	skinInternalConductionMult = 2000
fuelCrossFeed = False
explosionPotential = 0.1
breakingForce = 150
breakingTorque = 150
stageOffset = 0
childStageOffset = 1


MODULE
{
    name = LaunchClamp
	trf_towerPivot_name = Tower_PiviotDummy
	trf_towerStretch_name = Tower
	trf_anchor_name = Base
	trf_animationRoot_name = Anim_Root
	anim_decouple_name = Launch_Clamp_Apollo
}
	MODULE
	{
		name = ModuleGenerator
		isAlwaysActive = true
		OUTPUT_RESOURCE
		{
			name = ElectricCharge
			rate = 1
		}
	}
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = False
		situationMask = 4
		useProgressForBodies = False
		usePrestigeForSit = False
		CONSTRAINT
		{
			type = SITUATION
			value = 4
			body = _Home
		}
		CONSTRAINT
		{
			type = SITUATION
			value = 0
			body = _NotHome
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
		}
	}
}
