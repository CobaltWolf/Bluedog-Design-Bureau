PART
{
	name = bluedog_Delta_GEM40
	module = Part
	author = CobaltWolf & VenomousRequiem

MODEL
{
	model = Bluedog_DB/Parts/Delta/bluedog_Delta_GEM40
}
	rescaleFactor = 1.0
	scale = 1.0
	node_attach = 0.294, 0.0, 0.0, 1.0, 0.0, 0.0, 1
	fx_exhaustFlame_yellow = 0.0, -11.2673, 0.0, 0.0, 1.0, 0.0, running
	fx_exhaustSparks_yellow = 0.0, -11.2673, 0.0, 0.0, 1.0, 0.0, running
	fx_smokeTrail_medium = 0.0, -11.2673, 0.0, 0.0, 1.0, 0.0, running
	sound_vent_medium = engage
	sound_rocket_hard = running
	sound_vent_soft = disengage
	sound_explosion_low = flameout
	TechRequired = generalRocketry
	entryCost = 1200
	cost = 361
	category = Engine
	subcategory = 0
	title = Daleth-CGR-40 "Ruby" Solid Rocket Booster
	manufacturer = Bluedog Design Bureau
	description = An evolution of the Dioscuri booster design, the Ruby utilizes new production methods, making it one of the most advanced SRBs ever built. Despite this, it remains a cost effective way to add thrust to rockets.
	attachRules = 0,1,0,1,0
	mass = 0.5106
	heatConductivity = 0.06 // 1/2 default
	skinInternalConductionMult = 4.0
	emissiveConstant = 0.5 // yes, it's white. But let's claim it's an emissive white...'
	dragModelType = default
	maximum_drag = 0.3
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 7
	maxTemp = 2000 // = 3600
	stagingIcon = SOLID_BOOSTER
	bulkheadProfiles = srf
	
	tags = delta daleth gem cgr solid booster strapon radial thrust twr
	
	MODULE
	{
		name = ModuleEngines
		thrustVectorTransformName = thrustTransform
		throttleLocked = True
		exhaustDamage = True
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 112
		heatProduction = 400
		useEngineResponseTime = True
		engineAccelerationSpeed = 10.0
		allowShutdown = False
		fxOffset = 0, 0, 0.6
		
		// Possible EngineType values:
		// Generic, SolidBooster, LiquidFuel, Piston, Turbine, ScramJet, Electric, Nuclear, MonoProp
		EngineType = SolidBooster
		
		PROPELLANT
		{
			name = SolidFuel
			ratio = 1.0
			DrawGauge = True
		}
		atmosphereCurve
		{
			key = 0 234
			key = 1 205
			key = 7 0.001
		}
	}
	
	RESOURCE
	{
		name = SolidFuel
		amount = 296
		maxAmount = 296
	}

	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = True
		situationMask = 60
		CONSTRAINT
		{
			// disable all but home
			type = SITUATION
			value = 0
			body = _NotHome
			prestige = Trivial
		}
		CONSTRAINT
		{
			// disable all but home
			type = SITUATION
			value = 0
			body = _NotHome
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 600
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 900
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 300
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1200
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
	}

	MODULE
	{
		name = ModuleSurfaceFX
		thrustProviderModuleIndex = 0
		fxMax = 0.75
		maxDistance = 50
		falloff = 1.8
		thrustTransformName = thrustTransform
	}
}
