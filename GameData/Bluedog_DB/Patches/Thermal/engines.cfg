// Make engines actually heat up.
// This patch is temporary to test the formula. Engines should heat up but not overheat.
//

@PART[bluedog_Titan_Transtage|bluedog_Skylab_TRS_propulsionKit]:FOR[Bluedog_DB]
{
	thermalEfficiency = 0.97
}

@PART[bluedog*,Bluedog*]:HAS[@MODULE[ModuleEngines*]:HAS[~throttleLocked[True]],~thermalEfficiency[],!RESOURCE[Ablator]]:FOR[Bluedog_DB]
{
	thermalEfficiency = 0.9
}

@PART[bluedog*,Bluedog*]:HAS[@MODULE[ModuleEngines*]:HAS[#throttleLocked[True]],~thermalEfficiency[],!RESOURCE[Ablator]]:FOR[Bluedog_DB]
{
	thermalEfficiency = 0.9
}

//@PART[bluedog*,Bluedog*]:HAS[@MODULE[ModuleEngines*]:HAS[@PROPELLANT[XenonGas]]]:LAST[Bluedog_DB]
//{
//    thermalEfficiency = 0.999 // or higher, so it gets a little warm
//}


@PART[bluedog*,Bluedog*]:HAS[~thermalBypass[true],@MODULE[ModuleEngines*],!RESOURCE[Ablator]]:LAST[Bluedog_DB]
{
	@maxTemp = 2500
	%skinMassPerArea = 1
	%emissiveConstant = 0.8
	%heatConductivity = 0.03 // 1/4 default
	%skinInternalConductionMult = 4
	//%skinSkinConductionMult = 1


	thermalWaste = 1
	@thermalWaste -= #$thermalEfficiency$
	@MODULE[ModuleEngines*],*
	{
		// Engine power in kW = 0.5 * exhaust velocity * thrust
		%heatProduction = 4.903325 // 0.5 * 9.80665
		@heatProduction *= #$atmosphereCurve/key,0[1, ]$
		%exhaustDamageMultiplier = #$heatProduction$ // Store this now. It gets multiplied by Thrust when applied.

		// Total power
		@heatProduction /= #$../thermalEfficiency$
		@heatProduction *= #$maxThrust$

		// Get the waste heat
		@heatProduction *= #$../thermalWaste$

		// ModuleEngines will multiply heatProduction by standardSpecificHeatCapacity * mass * internalHeatProductionFactor
		%partThermalMass = 20 // 800 * 0.025
		@partThermalMass *= #$../mass$
		@heatProduction /= #$partThermalMass$

		%exhaustDamageMaxRange = #$maxThrust$
		@exhaustDamageMaxRange != 0.5
		%exhaustDamageFalloffPower = 2
		%exhaustDamageMaxMutliplier = 0.125 // 1
		//%exhaustDamageSplashbackMult = 4
		//%exhaustDamageSplashbackFallofPower = 2
		//%exhaustDamageSplashbackMaxMutliplier = 1
	}
}

@PART[bluedog*,Bluedog*]:HAS[~thermalBypass[true],@MODULE[ModuleEngines*]:HAS[#throttleLocked[True]],!RESOURCE[Ablator]]:LAST[Bluedog_DB]
{
	%thermalMassModifier = 2.5
	//%skinMassPerArea = 50
	%emissiveConstant = 0.5
	%heatConductivity = 0.012 // 1/10 default
	%skinInternalConductionMult = 10

	%radiatorMax = 1

	@MODULE[ModuleEngines*],*
	{
		%partTotalThermalMass = #$partThermalMass$
		@partTotalThermalMass *= 5.35 // factor in the fuel
		@heatProduction *= #$partThermalMass$
		@heatProduction /= #$partTotalThermalMass$
	}
}

@PART[bluedog*,Bluedog*]:HAS[@MODULE[ModuleEngines*]:HAS[@PROPELLANT[XenonGas]]]:LAST[Bluedog_DB]
{

    @MODULE[ModuleEngines*],*
    {
        @heatProduction = 0
    }
}

//@PART[bluedog*,Bluedog*]:HAS[@MODULE[ModuleEngines*]:HAS[#throttleLocked[True]],@RESOURCE[SolidFuel]]:LAST[Bluedog_DB]
//{
//	%thermalMassModifier = 2.5
//	//%skinMassPerArea = 50
//	%emissiveConstant = 0.5
//	%heatConductivity = 0.012 // 1/10 default
//	%skinInternalConductionMult = 10
//
//	%radiatorMax = 1
//
//	@MODULE[ModuleEngines*],*
//	{
//		%fuelThermalMass = 0.1725 // 920 * 0.025 * 0.0075
//		@fuelThermalMass *= #$../RESOURCE[SolidFuel]/maxAmount$
//		%partTotalThermalMass = #$partThermalMass$
//		@partTotalThermalMass += #$fuelThermalMass$
//		@heatProduction *= #$partThermalMass$
//		@heatProduction /= #$partTotalThermalMass$
//	}
//}

@PART[bluedog_Pioneer_OrbiterPropulsionUnit]:LAST[Bluedog_DB]
{
    @MODULE[ModuleEngines*],*
    {
        @heatProduction = 0
    }
}
