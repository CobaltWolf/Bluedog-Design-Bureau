PART
{
	name = bluedog_GooLab_Module
	module = Part
	author = CobaltWolf
MODEL
{
	model = Bluedog_DB/Parts/Skylab/bluedog_GooLab_Module
}
	rescaleFactor = 1
	node_stack_top = 0.0, 0.90211, 0.0, 0.0, 1.0, 0.0, 2
	node_stack_bottom = 0.0, -1.2353, 0.0, 0.0, -1.0, 0.0, 2
	CrewCapacity = 1
	TechRequired = spaceExploration
	entryCost = 6000
	cost = 2100
	category = Science
	subcategory = 0
	title = MONK-E-MGL Orbital Goo Laboratory
	manufacturer = Bluedog Design Bureau
	description = What is the mystery goo? How did it get here? What does it want? Those questions, and many more, will be answered here: The MONK-E Orbital Goo Laboratory. Capable of supporting, and studying, two goo "samples" for long durations in orbit - both crew tended, or as a station module - and then safely packaging them for return home. They'll love it, we're sure.
	real_title = Orbital Goo Laboratory
	real_manufacturer = Northrup Systems Laboratory
	real_description =  Laboratory module for studying mystery goo. Based on the Orbital Primate Spacecraft - sorry, we skirt around animal testing here.
	attachRules = 1,0,1,1,0
	mass = 1.5
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.3
	angularDrag = 2
	crashTolerance = 6
	breakingForce = 112
	breakingTorque = 112
	maxTemp = 1000
	skinMaxTemp = 2200
	vesselType = Ship
	bulkheadProfiles = size1p5

	tags = base cabin (can outpost passenger statio tour tuna apollo skylab hokulani monkey goo lab 

	INTERNAL
	{
		name = crewCabinInternals
	}

		EFFECTS
	{
		rcs
		{
			AUDIO_MULTI
			{
				channel = Ship
				transformName = rcsTransform
				clip = sound_rocket_mini
				volume = 0.0 0.0
				volume = 0.1 0.0
				volume = 0.5 0.025
				volume = 1.0 0.1
				pitch = 0.0 0.75
				pitch = 1.0 1.5
				loop = true
			}
			MODEL_MULTI_PARTICLE
			{
				modelName = Squad/FX/Monoprop_small
				transformName = rcsTransform
				emission = 0.0 0.0
				emission = 0.1 0.0
				emission = 1.0 1.0
				speed = 0.0 0.8
				speed = 1.0 1.0
				localRotation = -90, 0, 0
			}
		}
	}

	MODULE
	{
		name = ModuleRCSFX
		stagingEnabled = False
		thrusterTransformName = rcsTransform
		thrusterPower = 0.25
		resourceName = MonoPropellant
		resourceFlowMode = STAGE_PRIORITY_FLOW
		runningEffectName = rcs
		atmosphereCurve
		{
			key = 0 240
			key = 1 100
			key = 4 0.001
		}
	}

	RESOURCE
	{
		name = MonoPropellant
		amount = 5
		maxAmount = 5
	}


	RESOURCE
	{
		name = ElectricCharge
		amount = 100
		maxAmount = 100
	}

	MODULE
	{
    name = DMModuleScienceAnimateGeneric			//Name of the module - don't change this

	//Animation Fields**** Similar to ModuleAnimateGeneric (default values shown)

	animationName = dummy		//Name of your animation - get the name from Unity scene

	animSpeed = 1						//Speed to play animation
	endEventGUIName = Retract				//Title of retract animation event/action group
	showEndEvent = false				//Do you want to show the retract event/action group - only displayed in-flight after deploy event triggered
	startEventGUIName = Deploy				//Title of deploy animation event/action group
	showStartEvent = false				//Do you want to show the deploy event/action group
	toggleEventGUIName = Toggle Goo Stasis				//Title of toggle animation event/action group - Plays deploy or retract animation based on current state - Is reversible while playing
	showToggleEvent = false
	showEditorEvents = true					//Do you want to be able to preview the animation in the VAB/SPH
	useSampleTransforms = true			//Do you have mesh transforms that represent physical samples which should be removed when an experiment is collected or transmited
	sampleTransformName = sample //The name of the mesh transform representing the sample
											//If collection of more than one sample is allowed then the number of transforms must equal the number of samples
											//And the transforms must use the same name prefix followed by a .00x number; sampleTransform.000, sampleTransform.001, etc...
											//Only the tranform prefix should be entered in this field, sampleTransform for this example

	//Science Experiment Fields**** The same as ModuleScienceExperiment (default values shown)

	collectActionName = Collect Goo Samples			//Name of the EVA data collection event
	//collectWarningText = *empty string			//Warning text to display when retrieving data from the part during EVA - Only applicable with non-rerunnable parts
	dataIsCollectable = true				//Allow EVA Kerbals to collect science reports from the part
	experimentActionName = Collect Data			//Name for action group and right-click data collection function
	experimentID = bd_GooLab			//Experiment name - from the "id = " field in your ScienceDefs.cfg for this experiment
	hideUIwhenUnavailable = false				//Hide the right-click data collection buttons when experiment cannot be used
	interactionRange = 1.2					//Range for EVA interaction in meters
	rerunnable = true					//Can the part be used more than once
	resettable = true					//Does nothing???
	resettableOnEVA = true					//Allow EVA Kerbals to reset the part - removes any existing science reports

	resetActionName = Replace Goo Samples		//Name for action group and right-click reset function
	reviewActionName = Review Goo Samples			//Name for action group and right-click review data function
	useActionGroups = True					//Are the VAB/SPH action groups available - does not affect the availability of right-click functions
	useStaging = False					//Control experiment activation through staging (may not actually work)
	xmitDataScalar = 0.2					//Transmission data value, determines the percentage of the baseValue (from your ScienceDefs.cfg) recovered from a transmission
	usageReqMaskExternal = -1

	customFailMessage = The microgravity properties of goo can only be studied in orbit
	experimentAnimation = false		//Default = true		//Do you want your experiment to be dependent on the animation playing/already being deployed - why else would you be using this plugin?
	// haha jokes on you I just wanted the sample transforms
	experimentWaitForAnimation = false
	keepDeployedMode = 2
	waitForAnimationTime = 1.5
	oneWayAnimation = false
	resourceExpCost = 0
	asteroidReports = true
	planetaryMask = 524287
	planetFailMessage = We don't know where you are, and neither does the goo
	storageFullMessage = Goo return capsules are full //Message to play when you can't collect any more data
	experimentsLimit = 2
	labDataBoost = 1

	}

		MODULE
	{
		name = FlagDecal
		textureQuadName = flagTransform1
	}

	MODULE
	{
		name = FlagDecal
		textureQuadName = flagTransform2
	}
}
