PART
{
	name = bluedog_RAE_RadioAntenna
	module = Part
	author = Invaderchaos
	MODEL
	{
		model = Bluedog_DB/Parts/ProbeExpansion/Explorer/bluedog_RAE_RadioAntenna
	}
	scale = 1
	rescaleFactor = 1.0
	node_stack_bottom = 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0
	node_attach = 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0
	TechRequired = spaceExploration
	entryCost = 1000
	cost = 500
	category     = Science
	subcategory  = 0
	title        = REI-RBR1500 Radio Astronomy V-Antenna
	manufacturer = Bluedog Design Bureau
	description  = An ultra-long antenna designed for radio astronomy signal collection for the REI spacecraft. The antenna is tightly wound into a coil which is deployed by a motor driven system. This antenna includes a variant for surface attachment as well as a variant for mount attachment. 

	real_title = RAE Radio Astronomy V-Antenna
	real_manufacturer = Goddard Space Flight Center
	real_description  = An ultra-long antenna designed for radio astronomy signal collection for the RAE spacecraft. The antenna is tightly wound into a coil which is deployed by a motor driven system. This antenna includes a variant for surface attachment as well as a variant for mount attachment. Used on Explorer 38 and 49.

	attachRules = 1,1,0,0,1
	mass = 0.0175
	dragModelType  = default
	maximum_drag   = 0.20
	minimum_drag   = 0.15
	angularDrag    = 2
	crashTolerance = 10
	maxTemp        = 2000
	bulkheadProfiles = size00, srf

	tags = RAE Radio wave plasma science sci experiment radio astronomy explorer REI antenna
	techtag = RAE

	//MODULE
	//{
	//	name = ModuleDataTransmitter
	//	antennaType = DIRECT
	//	packetInterval = 1.2
	//	packetSize = 0.3
	//	packetResourceCost = 2.5
	//	requiredResource = ElectricCharge
	//	//DeployFxModules = 0
	//	antennaPower = 16000000
	//	antennaCombinable = True
	//}
	
	MODULE
	{
		name = ModuleCargoPart
		packedVolume = 17
	}

	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = meshSwitchAttach
		switcherDescription = Attachment
		switcherDescriptionPlural = Attachments
		affectDragCubes = False
		affectFARVoxels = False
		SUBTYPE
		{
			name = Surface Attach
		}
		SUBTYPE
		{
			name = Mount Attach
			TRANSFORM
			{
				name = RAE_RadioAntenna2
				rotationOffset = 66.6968, 0, 0
				positionOffset = 0, -0.043425, 0.039245
			}
			//NODE
			//{
			//	name = bottom
			//	position = 0, -0.043336, 0.063245
			//}
			//NODE
			//{
			//	name = node_attach
			//	position = 0, -0.043336, 0.063245
			//}
		}
	}

	
	MODULE
	{
		name = DMModuleScienceAnimateGeneric
	//Animation Fields**** Similar to ModuleAnimateGeneric (default values shown)
		animationName = deploy			//Name of your animation - get the name from Unity scene
		animSpeed = 1						//Speed to play animation
		endEventGUIName = Retract Radio Astronomy V-Antenna				//Title of retract animation event/action group
		showEndEvent = true					//Do you want to show the retract event/action group - only displayed in-flight after deploy event triggered
		startEventGUIName = Deploy Radio Astronomy V-Antenna				//Title of deploy animation event/action group
		showStartEvent = true					//Do you want to show the deploy event/action group
		toggleEventGUIName = Toggle Radio Astronomy V-Antenna 				//Title of toggle animation event/action group - Plays deploy or retract animation based on current state - Is reversible while playing
		showToggleEvent = false					//Do you want to show the toggle event/action group - not recommended to be used together with deploy/retract events, too many unnecessary buttons
		showEditorEvents = true					//Do you want to be able to preview the animation in the VAB/SPH
	//Science Experiment Fields**** The same as ModuleScienceExperiment (default values shown)
		collectActionName = Collect Radio Astronomy Data			//Name of the EVA data collection event
		dataIsCollectable = true				//Allow EVA Kerbals to collect science reports from the part
		experimentActionName = Perform Radio Astronomy Observations			//Name for action group and right-click data collection function
		experimentID = bd_rpws				//Experiment name - from the "id = " field in your ScienceDefs.cfg for this experiment
		hideUIwhenUnavailable = false				//Hide the right-click data collection buttons when experiment cannot be used
		interactionRange = 1.2					//Range for EVA interaction in meters
		rerunnable = true					//Can the part be used more than once
		resettable = true					//Does nothing???
		resettableOnEVA = true					//Allow EVA Kerbals to reset the part - removes any existing science reports
		resourceResetCost = 1					//Multiplier for the resource cost to reset the experiment with a science lab
		resourceToReset = ElectricCharge			//Can't change????'
		resetActionName = Discard Radio Astronomy Data			//Name for action group and right-click reset function
		reviewActionName = Review Radio Astronomy Data			//Name for action group and right-click review data function
		useActionGroups = True					//Are the VAB/SPH action groups available - does not affect the availability of right-click functions
		useStaging = False					//Control experiment activation through staging (may not actually work)
		xmitDataScalar = 1.0					//Transmission data value, determines the percentage of the baseValue (from your ScienceDefs.cfg) recovered from a transmission
		usageReqMaskExternal = -1				//Bit Mask to define external usage conditions; 8 specifies that the EVA kerbal must be a scientist to deploy the experiment; 4 will allow any Kerbal to deploy from EVA; -1 means nothing can use the experiment externally
	//Science Experiment - Animation Fields**** (fields are from my magnetometer setup)
		customFailMessage = Radio astronomy observations cannot be performed here. Try again in space.
		deployingMessage = Close proximity to the craft scrambles the antenna's sensors, deploying the scanner now. //'
		experimentAnimation = true		//Default = true		//Do you want your experiment to be dependent on the animation playing/already being deployed
		experimentWaitForAnimation = true	//Default = false		//Do you want to wait for the animation to complete before you begin the experiment (or any other arbitrary amount of time)
		keepDeployedMode = 2
		waitForAnimationTime = -1
		oneWayAnimation = false
		asteroidReports = true		        //Default = false	        //Do you want to be able to collect results while landed on and/or near an asteroid
		planetaryMask = 524287			//Default = 524287		//Bitmask defining which planets the experiment can be performed on/around, works everywhere by default
		planetFailMessage = Can't conduct experiment here  	//Default = Can't conduct experiment here 		//Message to be displayed if the experiment can't be performed on the current planet/moon'
		experimentsLimit = 1          		//Default = 1		//Sets the limit for how many experiments can be collected and stored by an individual part
		labDataBoost = 0			//Default = 0		//Set the gain for transmission after lab processing; the default value, 0, will set the boost to 50% of the regular transmission value
		externalDeploy = true			//Default = false	//Allow the experiment to be triggered by an EVA Kerbal; still requires power if applicable
		resetLevel = 0				//Default = 0 		//Level of scientist required to reset a used experiment on EVA
		excludeAtmosphere = false		//Default = false	//Specify experiments that can only run on planets/moons without an atmosphere
		excludeAtmosphereMessage = This experiment can't be conducted within an atmosphere       //Message to be displayed when an experiment fails because an atmosphere is present'

		requiredParts = none		//Default = none	//A list of part names that are required to be on the vessel for the experiment to work - separate part names by a , - all specified parts must be on the current vessel - use the actual part name (the name = myPart field in the part config), not the in-game title
		//allowAnimationWhileShielded = False
		//allowDeployLimit = true
		//revClampDirection = false
		//revClampSpeed = true
		//revClampPercent = true	
		asteroidReports = True
		asteroidTypeDependent = True
	}


	// Dimensions: x: 0.11, y: 0.38, z: 0.23
	// Bounding Box Size: 9.67998 liters
	// Volume adjustment: 25%

	    MODULE
	    {
	        name = ModuleCargoPart
	        packedVolume = 13
	        KSP_PartVolume = true
	    }


}
