PART
{
	name = bluedog_OGO_ExperimentBoom_2
	module = Part
	author = CobaltWolf
	MODEL
	{
		model = Bluedog_DB/Parts/ProbeExpansion/OGO/bluedog_OGO_ExperimentBoom_2
	}
	SHABBY_MATERIAL_REPLACE
	{
		materialDef = bluedog_OGO1_PBR
		targetMaterial = bluedog_OGO_Parts1
	}
	scale = 1
	rescaleFactor = 1
	node_attach = 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0
	TechRequired = basicScience
	entryCost = 24640
	cost = 3520
	category = Science
	subcategory = 0
	title = HLR-OOG-EP2 Gravimetric Scanner
	manufacturer = Bluedog Design Bureau
	description = This advanced instrument can map the gravitational fields of planetary bodies.

	real_title = OGO-EP2 Gravimetric Scanner
	real_manufacturer = Jet Propulsion Laboratory

	attachRules = 1,1,0,0,0
	mass = 0.01
	crashTolerance = 10
	maxTemp = 1200
	emissiveConstant = 0.85
	thermalMassModifier = 4.0
	angularDrag = 1
	dragModelType = default
	maximum_drag = 0.1
	minimum_drag = 0.1
	bulkheadProfiles = srf

	PhysicsSignificance = 1

	tags = folding science ogo oog orbital orbiting geophysical observatory gravity gravioli gravimeter

	MODULE
	{
		name = ModuleCargoPart
		packedVolume = 10
	}

	MODULE
	{
	  name = DMModuleScienceAnimateGeneric
	  //Animation Fields**** Similar to ModuleAnimateGeneric (default values shown)
	  animationName = deploy			//Name of your animation - get the name from Unity scene
	  animSpeed = 2					//Speed to play animation

	  endEventGUIName = Retract Gravimetric Scanner
	  showEndEvent = false					//Do you want to show the retract event/action group - only displayed in-flight after deploy event triggered
	  startEventGUIName = Deploy Gravimetric Scanner
	  showStartEvent = false					//Do you want to show the deploy event/action group
	  toggleEventGUIName = Toggle Gravimetric Scanner
	  showToggleEvent = true					//Do you want to show the toggle event/action group - not recommended to be used together with deploy/retract events, too many unnecessary buttons
	  showEditorEvents = true					//Do you want to be able to preview the animation in the VAB/SPH

	  //Science Experiment Fields**** The same as ModuleScienceExperiment (default values shown)
	  experimentID = gravityScan			//Experiment name - from the "id = " field in your ScienceDefs.cfg for this experiment
	  experimentActionName = Log Gravity Data		//Name for action group and right-click data collection function
	  resetActionName = Discard Gravity Data			//Name for action group and right-click reset function
	  dataIsCollectable = true				//Allow EVA Kerbals to collect science reports from the part
	  hideUIwhenUnavailable = false				//Hide the right-click data collection buttons when experiment cannot be used
	  interactionRange = 1.2					//Range for EVA interaction in meters
	  rerunnable = true					//Can the part be used more than once
	  resettable = true					//Does nothing???
	  resettableOnEVA = true					//Allow EVA Kerbals to reset the part - removes any existing science reports
	  useActionGroups = True					//Are the VAB/SPH action groups available - does not affect the availability of right-click functions
	  useStaging = False					//Control experiment activation through staging (may not actually work)
	  xmitDataScalar = 1.0					//Transmission data value, determines the percentage of the baseValue (from your ScienceDefs.cfg) recovered from a transmission
	  usageReqMaskExternal = -1				//Bit Mask to define external usage conditions; 8 specifies that the EVA kerbal must be a scientist to deploy the experiment; 4 will allow any Kerbal to deploy from EVA; -1 means nothing can use the experiment externally

	  totalScienceLevel = 0.4 		//Set to less than 1 to allow for experiments that collect less than 100% of an experiments max value; allows for multiple parts to conduct the same experiment with differing levels of max science available

	  //Science Experiment - Animation Fields**** (fields are from my magnetometer setup)
	  customFailMessage = The experiment can't be performed here.
	  deployingMessage = Close proximity to the craft scrambles the gravimeter's sensors, deploying the scanner now.

	  experimentAnimation = true		//Default = true		//Do you want your experiment to be dependent on the animation playing/already being deployed

	  experimentWaitForAnimation = true	//Default = false		//Do you want to wait for the animation to complete before you begin the experiment (or any other arbitrary amount of time)
	  waitForAnimationTime = 3
	  //resourceExperiment = ElectricCharge // Default = ElectricCharge // Resource to consume during waitForAnimationTime
	  //resourceExpCost = 0 // Default = 0 // Amount per second of resource to consume during waitForAnimationTime

	  keepDeployedMode = 0

	  oneWayAnimation = false
	  asteroidReports = true		        //Default = false	        //Do you want to be able to collect results while landed on and/or near an asteroid
	  externalDeploy = true			//Default = false	//Allow the experiment to be triggered by an EVA Kerbal; still requires power if applicable
	}
	MODULE
	{
		name = ModuleEnviroSensor
		sensorType = GRAV
	}
}
