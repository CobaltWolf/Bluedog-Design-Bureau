PART
{
	name = bluedog_Apollo_Boilerplate
	module = Part
	author = Invaderchaos
MODEL
{
	model = Bluedog_DB/Parts/Apollo/bluedog_Apollo_Boilerplate
}
	scale = 1
	rescaleFactor = 1
	node_stack_bottom = 0.0, -0.476546, 0.0, 0.0, -1.0, 0.0, 2
	node_stack_top = 0.0, 0.927086, 0.0, 0.0, 1.0, 0.0, 1
	//node_stack_top2 = 0.0, 0.33921, 0.0, 0.0, 1.0, 0.0, 1

	NODE
	{
		transform = drogueChute_NODE
		name = parachute
		size = 0
		method = FIXED_JOINT
	}
	NODE
	{
		transform = mainChute_NODE
		name = parachute
		size = 0
		method = FIXED_JOINT
	}

	//CoPOffset = 0.0, 0.6, 0.0
	//CenterOfBuoyancy = 0.0, 0.8, 0.0
	//CenterOfDisplacement = 0.0, -0.3, 0.0
	buoyancyUseSine = False
	buoyancy = 2.75
	//CoLOffset = 0.0, -0.45, 0.0
	TechRequired = commandModules
	entryCost = 7000
	cost = 2250
	category = Pods
	title = Kane-SABP1 Command Pod Boilerplate
	subcategory = 0
	manufacturer = Bluedog Design Bureau
	description = This "boilerplate" is designed to simulate the Kane-11-3 Command Pod in mass, shape, and more. This boilerplate capsule holds no crew and is intended for test flights to prove and certify the Kane's design before the capsule is used. Perfect for orbital flights, suborbital flights, and other types of test flights. Can be used with parachutes for drop testing. Includes probe control, minor SAS control, batteries, and a built-in direct antenna. However, this boilerplate does not include a real heatshield and as such is not intended to survive orbital reentry. Intended to be used with the Kane-SA-MSM Service Module Boilerplate.

	real_title = Apollo Command Module Boilerplate
	real_manufacturer = North American Rockwell
	real_description = This "boilerplate" is designed to simulate the Apollo Command Module in mass, shape, and more. This boilerplate capsule holds no crew and is intended for test flights to prove and certify the Kane's design before the capsule is used. Perfect for orbital flights, suborbital flights, and other types of test flights. Can be used with parachutes for drop testing. Includes probe control, minor SAS control, batteries, and a built-in direct antenna. However, this boilerplate does not include a real heatshield and as such is not intended to survive orbital reentry. Intended to be used with the Apollo Service Module Boilerplate.

	attachRules = 1,0,1,1,0
	mass = 3.25
	dragModelType = default
	maximum_drag = 0.20
	minimum_drag = 0.15
	angularDrag = 2
	crashTolerance = 45
	breakingTorque = 200
	breakingForce = 200
	maxTemp = 1400
	skinMaxTemp = 2400
	vesselType = Ship
	bulkheadProfiles = size2, size1
	tags = capsule control flight Kane Apollo block ?1 csm boilerplate test article uncrewed pegasus ?siv ?s4 CSMTEST
  	techtag = apolloGen1

	RESOURCE
	{
		name = ElectricCharge
		amount = 100
		maxAmount = 100
	}

	MODULE
	{
		name = ModuleCommand
		minimumCrew = 0
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.01
		}
		hasHibernation = True
	}

	MODULE
	{
		name = ModuleReactionWheel
		PitchTorque = 10
		YawTorque = 10
		RollTorque = 10
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.8
		}
	}

	MODULE
	{
		name = ModuleConductionMultiplier
		modifiedConductionFactor = 0.003
		convectionFluxThreshold = 3000
	}


	MODULE
	{
		name = ModuleDataTransmitter
		antennaType = DIRECT
		packetInterval = 0.6
		packetSize = 2
		packetResourceCost = 0.4
		requiredResource = ElectricCharge
		//DeployFxModules = 0
		antennaPower = 400000
		antennaCombinable = True
	}

	//MODULE
    //{
     //   name = ModuleB9PartSwitch
      //  moduleID = ReentryCoM
	//	switcherDescription = CoM
	//	switcherDescriptionPlural = CoM
      //  switchInFlight = True
      //
      //  SUBTYPE
      //  {
      //      name = Normal
     //       CoMOffset = 0, 0, 0
      //  }
     //   SUBTYPE
    //    {
     //       name = Offset
     //       CoMOffset = 0, 0, 0.158
    //    }
    //}

	//MODULE
	//{
	//	name = ModuleLiftingSurface
	//	useInternalDragModel = False
	//	deflectionLiftCoeff = 1.4
	//	liftingSurfaceCurve = CapsuleBottom
	//	disableBodyLift = False
	//	omnidirectional = False
	//	perpendicularOnly = True
	//	transformDir = Y
	//	transformSign = -1
	//	nodeEnabled = True
	//	attachNodeName = bottom
	//}

	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = textureSwitchPaint
		uiGroupName = paint
		uiGroupDisplayName = Paint Switch
		switcherDescription = Paintjob
		switcherDescriptionPlural = Paintjobs
		affectDragCubes = False
		affectFARVoxels = False
		SUBTYPE
		{
			name = Default
			primaryColor = White
			transform = colorswitch
		}
	}

	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = textureSwitchHandles
		uiGroupName = paint
		uiGroupDisplayName = Paint Switch
		switcherDescription = Handles
		switcherDescriptionPlural = Handle Colors
		affectDragCubes = False
		affectFARVoxels = False
		SUBTYPE
		{
			name = Default
			primaryColor = MediumGrey
		}
	}



	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = False
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2000
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
	}

}
