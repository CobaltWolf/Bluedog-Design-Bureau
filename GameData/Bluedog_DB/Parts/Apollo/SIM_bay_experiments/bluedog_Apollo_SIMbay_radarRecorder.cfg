PART
{
	name = bluedog_Apollo_SIMbay_radarRecorder
	module = Part
	author = Zorg
	MODEL
	{
		model = Bluedog_DB/Parts/Apollo/SIM_bay_experiments/bluedog_Apollo_SIMbay_radarRecorder
	}
	scale = 1
	rescaleFactor = 1
	node_stack_bottom = 0, 0.146265, 0, 0.0, 1.0, 0.0, 0
	node_attach = 0, 0.146265, 0, 0.0, 1.0, 0.0
	TechRequired = advExploration
	entryCost = 5000
	cost = 2390
	category = Science
	subcategory = 0
	title = Kane KSBRR-209 Radar Optical Recording Unit
	manufacturer = Bluedog Design Bureau
	description = This device was designed to record synthetic aperture radar data in an optical format on photographic film. We've adapted it to record other forms of scientific data as well.
	real_title = Apollo S-209 ALSE Optical Recording Unit
	real_manufacturer = Jet Propulsion Laboratory
	//real_description = This device records synthetic aperture radar data in an optical format on photographic film. It is required for the Apollo S-209 ALSE Sounding Radar to work.
	attachRules = 1,1,0,1,1 // attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	mass = 0.01
	dragModelType = default
	maximum_drag = 0.1
	minimum_drag = 0.1
	angularDrag = 2
	crashTolerance = 12
	maxTemp = 1200 // = 2900
	bulkheadProfiles = srf

	tags = Apollo Kane block ?1 ?2 ?i ?ii science box SIMbay recorder radar ?SAR ?CSAR ?ALSE CSMTEST

	techtag = apolloGen1

	MODULE
	{
		name = ModuleScienceContainer

		reviewActionName = #autoLOC_502201 //#autoLOC_502201 = Review Stored Data
		storeActionName = #autoLOC_502202 //#autoLOC_502202 = Store Experiments
		evaOnlyStorage = True // i.e. can nearby regular vessels also do this, or EVA only
		storageRange = 1.3
		canBeTransferredToInVessel = True
		canTransferInVessel = True
		showStatus = True
	}

	// Bluedog_DB/Parts/Apollo/SIM_bay_experiments/bluedog_Apollo_SIMbay_radarRecorder/bluedog_Apollo_SIMbay_radarRecorder
	// Dimensions: x: 0.37, y: 0.27, z: 0.35
	// Bounding Box Size: 34.93101 liters
	// Volume adjustment: 25%
	//
	    MODULE
	    {
	        name = ModuleCargoPart
	        packedVolume = 44
	        KSP_PartVolume = true
	    }

}
