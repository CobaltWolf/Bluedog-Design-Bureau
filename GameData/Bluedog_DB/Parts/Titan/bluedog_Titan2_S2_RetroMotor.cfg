PART
{
	name = bluedog_Titan2_S2_RetroMotor
	module = Part
	author = CobaltWolf
	MODEL
	{
		model = Bluedog_DB/Parts/Titan/bluedog_Titan2_S2_RetroMotor
	}
	rescaleFactor = 1.0
	scale = 1.0
	node_attach = 0.035, 0.0, 0.0, 1.0, 0.0, 0.0, 1
	TechRequired = flightControl
	entryCost = 300
	cost = 75
	category = Engine
	subcategory = 0
	title = Prometheus-II-RGM Separation Motor
	manufacturer = Bluedog Design Bureau
	description = Small separation boosters in an aerodynamic housing. This model angles the thrust vertically, to help carry an upper stage away from a lower one, or to assist in ullage. The rockets fire in the direction of the red arrows, so pay close attention and make sure they're thrusting the correct direction before you attempt to use them. //'
	real_title = STAR 5C Titan II separation motor
	real_manufacturer = Thiokol //assumption.
	real_description = Small separation boosters in an aerodynamic housing. This model angles the thrust vertically, to help carry an upper stage away from a lower one, or to assist in ullage. The rockets fire in the direction of the red arrows, so pay close attention and make sure they're thrusting the correct direction before you attempt to use them.
	attachRules = 0,1,0,0,0
	mass = 0.0125
	heatConductivity = 0.04 // 1/3 default
	skinInternalConductionMult = 4.0
	emissiveConstant = 0.5 // yes, it's white. But let's claim it's an emissive white...'
	dragModelType = default
	maximum_drag = 0.3
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 7
	maxTemp = 2000 // = 3600
	ActivatesEvenIfDisconnected = true
	stagingIcon = SOLID_BOOSTER
	bulkheadProfiles = srf

	tags = sepratron perfectron separation booster push solid kick ?sm68 titan ii 2 prometheus star 5

	techtag = titan2

	EFFECTS
	{
		running_solid
		{
			AUDIO
			{
				channel = Ship
				clip = sound_rocket_hard
				volume = 0.0 0.0
				volume = 1.0 1.5
				pitch = 0.0 0.2
				pitch = 1.0 0.8
				loop = true
			}

			MODEL_MULTI_PARTICLE
			{
				name = blaze
				modelName = Bluedog_DB/FX/PlumeParty/Engines/Solid/OMSBlaze
				transformName = thrustTransform
				emission = 0.0 0.0
				emission = 0.2 0.1
				emission = 0.8 1.0
				speed = 0.0 0.5
				speed = 0.5 1.0
				energy = 0.0 0.0
				energy = 0.5 1.0
				localScale = 0.15,0.15,0.15
				localPosition = 0,0,0.05
			}

			MODEL_MULTI_PARTICLE
			{
				name = chunk
				modelName = Bluedog_DB/FX/PlumeParty/Engines/Solid/OMSChunks
				transformName = thrustTransform
				emission = 0.0 0.0
				emission = 0.5 1.5
				emission = 1.0 1.0
				speed = 0.2 0.2
				speed = 1.0 1.0
				energy = 0.0 0.5
				energy = 0.5 1.0
				localScale = 0.15,0.15,0.15
				localPosition = 0,0,0.05
			}
		}
		engage
		{
			AUDIO
			{
				channel = Ship
				clip = sound_vent_medium
				volume = 1.0
				pitch = 1.0
				loop = false
			}
		}
		disengage
		{
			PREFAB_PARTICLE
			{
				prefabName = fx_exhaustSparks_flameout_2
				transformName = thrustTransform
				oneShot = true
				localScale = 0.15,0.15,0.15
				localOffset = 0,0,0.1
			}
			AUDIO
			{
				channel = Ship
				clip = sound_explosion_low
				volume = 1.5
				pitch = 0.8
				loop = false
			}
		}
		flameout
		{
			PREFAB_PARTICLE
			{
				prefabName = fx_exhaustSparks_flameout_2
				transformName = thrustTransform
				oneShot = true
				localScale = 0.15,0.15,0.15
				localOffset = 0,0,0.1
			}
			AUDIO
			{
				channel = Ship
				clip = sound_explosion_low
				volume = 1.5
				pitch = 0.8
				loop = false
			}
		}
	}
	
	// x2 motors, 2 kN thrust, 1 fuel each, gives -7.9 m/s to dry Titan second stage. 3 second burn

	MODULE
	{
		name = ModuleEnginesFX
		thrustVectorTransformName = thrustTransform
		throttleLocked = True
		exhaustDamage = True
		allowShutdown = False
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 2
		heatProduction = 550
		EngineType = SolidBooster
		powerEffectName = running_solid
		PROPELLANT
		{
			name = SolidFuel
			ratio = 1.0
			DrawGauge = True
		}
		atmosphereCurve
		{
			key = 0 154
			key = 1 118
			key = 6 0.001
		}
		exhaustDamageMultiplier = 200
	}

	RESOURCE
	{
		name = SolidFuel
		amount = 1
		maxAmount = 1
	}

	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = True
		situationMask = 60
		CONSTRAINT
		{
			// disable all but home
			type = SITUATION
			value = 0
			body = _NotHome
			prestige = Trivial
		}
		CONSTRAINT
		{
			// disable all but home
			type = SITUATION
			value = 0
			body = _NotHome
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 600
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 900
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 300
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1200
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
	}
}
