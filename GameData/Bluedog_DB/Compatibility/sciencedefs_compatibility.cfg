//Make magnetometer use DMagic mag scan: any Science module within a part cfg gets their experiment ID switched if applicable
@PART[bluedog*]:HAS[@MODULE[DMModuleScienceAnimateGeneric]:HAS[#experimentID[bd_magScan]]]:NEEDS[DMagicOrbitalScience]
{
	@MODULE[DMModuleScienceAnimateGeneric]
	{
		@experimentID = magScan
	}
}
@PART[bluedog*]:HAS[@MODULE[ModuleScienceExperiment]:HAS[#experimentID[bd_magScan]]]:NEEDS[DMagicOrbitalScience]
{
	@MODULE[ModuleScienceExperiment]
	{
		@experimentID = magScan
	}
}


//Make RPWS use DMagic RPWS: any Science module within a part cfg gets their experiment ID switched if applicable
@PART[bluedog*]:HAS[@MODULE[ModuleScienceExperiment]:HAS[#experimentID[bd_rpws]]]:NEEDS[DMagicOrbitalScience]
{
	@MODULE[ModuleScienceExperiment]
	{
		@experimentID = rpwsScan
	}
}
@PART[bluedog*]:HAS[@MODULE[DMModuleScienceAnimateGeneric]:HAS[#experimentID[bd_rpws]]]:NEEDS[DMagicOrbitalScience]
{
	@MODULE[DMModuleScienceAnimateGeneric]
	{
		@experimentID = rpwsScan
	}
}

//Make Soil Moisture Scan use DMagic version: any Science module within a part cfg gets their experiment ID switched if applicable
@PART[bluedog*]:HAS[@MODULE[ModuleScienceExperiment]:HAS[#experimentID[bd_SoilMoisture]]]:NEEDS[DMagicOrbitalScience]
{
	@MODULE[ModuleScienceExperiment]
	{
		@experimentID = dmSoilMoisture
	}
}
@PART[bluedog*]:HAS[@MODULE[DMModuleScienceAnimateGeneric]:HAS[#experimentID[bd_SoilMoisture]]]:NEEDS[DMagicOrbitalScience]
{
	@MODULE[DMModuleScienceAnimateGeneric]
	{
		@experimentID = dmSoilMoisture
	}
}

//Make xray diffraction experiment use DMagic version: any Science module within a part cfg gets their experiment ID switched if applicable
@PART[bluedog*]:HAS[@MODULE[ModuleScienceExperiment]:HAS[#experimentID[bd_XRayDiffract]]]:NEEDS[DMagicOrbitalScience]
{
	@MODULE[ModuleScienceExperiment]
	{
		@experimentID = dmXRayDiffract
	}
}
@PART[bluedog*]:HAS[@MODULE[DMModuleScienceAnimateGeneric]:HAS[#experimentID[bd_XRayDiffract]]]:NEEDS[DMagicOrbitalScience]
{
	@MODULE[DMModuleScienceAnimateGeneric]
	{
		@experimentID = dmXRayDiffract
	}
}

//Make Telescope Observations use SSPX Telescope Observation: any Science module within a part cfg gets their experiment ID switched if applicable
@PART[bluedog*]:HAS[@MODULE[ModuleScienceExperiment]:HAS[#experimentID[bd_TelescopeObservation]]]:NEEDS[StationPartsExpansionRedux]
{
	@MODULE[ModuleScienceExperiment]
	{
		@experimentID = sspxTelescopeObservation
	}
}
@PART[bluedog*]:HAS[@MODULE[DMModuleScienceAnimateGeneric]:HAS[#experimentID[bd_TelescopeObservation]]]:NEEDS[StationPartsExpansionRedux]
{
	@MODULE[DMModuleScienceAnimateGeneric]
	{
		@experimentID = sspxTelescopeObservation
	}
}

//Make bdb soil scoops use Coatl Surface Material Exposure: any Science module within a part cfg gets their experiment ID switched if applicable
@PART[bluedog*]:HAS[@MODULE[ModuleScienceExperiment]:HAS[#experimentID[bd_soilScoop]]]:NEEDS[CoatlAerospace]
{
	@MODULE[ModuleScienceExperiment]
	{
		@experimentID = ca_soilScoop
	}
}
@PART[bluedog*]:HAS[@MODULE[DMModuleScienceAnimateGeneric]:HAS[#experimentID[bd_soilScoop]]]:NEEDS[CoatlAerospace]
{
	@MODULE[DMModuleScienceAnimateGeneric]
	{
		@experimentID = ca_soilScoop
	}
}

@PART[bluedog*]:HAS[@MODULE[ModuleScienceExperiment]:HAS[#experimentID[bd_SiteSurvey]]]:NEEDS[CoatlAerospace]
{
	@MODULE[ModuleScienceExperiment]
	{
		@experimentID = ca_SiteSurvey
	}
}
@PART[bluedog*]:HAS[@MODULE[DMModuleScienceAnimateGeneric]:HAS[#experimentID[bd_SiteSurvey]]]:NEEDS[CoatlAerospace]
{
	@MODULE[DMModuleScienceAnimateGeneric]
	{
		@experimentID = ca_SiteSurvey
	}
}
@PART[bluedog*]:HAS[@MODULE[ModuleScienceExperiment]:HAS[#experimentID[bd_dust]]]:NEEDS[CoatlAerospace]
{
	@MODULE[ModuleScienceExperiment]
	{
		@experimentID = ca_kdex
	}
}
@PART[bluedog*]:HAS[@MODULE[DMModuleScienceAnimateGeneric]:HAS[#experimentID[bd_dust]]]:NEEDS[CoatlAerospace]
{
	@MODULE[DMModuleScienceAnimateGeneric]
	{
		@experimentID = ca_kdex
	}
}

//Make contracts using bd_magScan use DMagic magScan
//First patching the BDB contracts using DATA nodes for experiment lists
@CONTRACT_TYPE[BDB*]:HAS[@DATA[experimentslist]:HAS[#experiments[*bd_magScan*]]]:NEEDS[DMagicOrbitalScience]
{
	@DATA[experimentslist]
	{
		@experiments ^= :bd_magScan:magScan:
	}
}
//Also patching any other contracts using the same experiment definition within collectscience parameters (helps in case bdb definitions are used without manual patching on the contract side). 2 patches, to support nested (1 level only) parameters
@CONTRACT_TYPE[*]:HAS[@PARAMETER[*]:HAS[#experiment[*bd_magScan*]]]:NEEDS[DMagicOrbitalScience]
{
	@PARAMETER[*]:HAS[#experiment[*bd_magScan*]]
	{
		@experiment ^= :bd_magScan:magScan:
	}
}
@CONTRACT_TYPE[*]:HAS[@PARAMETER[*]:HAS[@PARAMETER[*]:HAS[#experiment[*bd_magScan*]]]]:NEEDS[DMagicOrbitalScience]
{
	@PARAMETER[*]:HAS[@PARAMETER[*]]
	{
		@PARAMETER[*]:HAS[#experiment[*bd_magScan*]]
		{
			@experiment ^= :bd_magScan:magScan:
		}
	}
}


//Remove bd_radarAltimeter from contract when SCANsat is installed (this can't be done generically, destroys the list otherwise (list still expects a definition in place)
@CONTRACT_TYPE[BDB_Ranger_Block2]:NEEDS[SCANsat]
{
	@DATA[experimentslist]
	{
		@experiments = [bd_camera, bd_gammaRay]
	}
}


//Make geiger counter use FASA geiger experiment
//@PART[bluedog_mariner4omni]:NEEDS[FASA]
//{
//	@MODULE[ModuleScienceExperiment],1{
//		@experimentID = GeigerCounter
//	}
//}
//@PART[bluedog_bluedog_explorercore]:NEEDS[FASA]
//{
//	@MODULE[ModuleScienceExperiment],0{
//		@experimentID = GeigerCounter
//	}
//}
//@PART[bluedog_geiger]:NEEDS[FASA]
//{
//@MODULE[DMModuleScienceAnimateGeneric]{
//		@experimentID = GeigerCounter
//	}
//}
//@PART[bluedog_Pioneer1]:NEEDS[FASA]
//{
//	@MODULE[ModuleScienceExperiment],0{
//		@experimentID = GeigerCounter
//	}
//}
