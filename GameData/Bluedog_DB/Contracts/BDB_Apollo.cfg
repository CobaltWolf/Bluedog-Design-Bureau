// Contract for BDB Apollo missions
//   Author: Morphisor

CONTRACT_TYPE
{
    name = BDB_Apollo
    group = BluedogDB
    genericTitle = Take one giant leap for Kerbalkind
    genericDescription = Take one giant leap for Kerbalkind on the target.
	
	title = Take one giant leap for Kerbalkind on @targetBody.
	description = It's time for the big one. No, I don't mean number 2, I'm fine thank you very much. We have been progressing well with our exploration of @targetBody, unhealthy ideas from Bob notwithstanding. We have successfully performed a probe landing and a crewed mission to space around @targetBody. But at the same time we have been building up towards this final epic, this ultimate of goals, this unparalleled feat... ok I'll stop now, you get the point.&br;&br;What I've been trying to say is, it's time to send Kerbals to the surface of @targetBody. We came up with a perfectly simple, Jeb-proof way of achieving that AND returning them safely back home as well. Just follow these instructions and you'll be fine. Probably.
	
    synopsis = <color=yellow>Launch a manned Kane spacecraft to @targetBody, land safely on the surface using a separate Lunar Module (LM), return science from the surface, dock back with the Kane spacecraft, release a sub-satellite for further research and finally return the crew and science home safely.</color>
	notes = In assembly, use the tag 'Kane' to find components fitting for this mission.
    completedMessage = Excellent work! For once, Gene and Wernher don't have a single witty comment to share on your success. That, if anything, is the true giant leap here...

    // 1 at a time
    maxSimultaneous = 1

    // Always offered by Bluedog Design Bureau
    agent = Bluedog Design Bureau

    targetBody = @targetBody1

    // Contract rewards
	advanceFunds = Random(@BluedogDB:Kerbucks4,@BluedogDB:Kerbucks5)
    rewardFunds = Random(@BluedogDB:Kerbucks8,@BluedogDB:Kerbucks9)
    rewardReputation = Random(20.0, 25.0)

	// Randomly select a possible target body.
    DATA
    {
        name = target
		title = target
		type = CelestialBody
		hidden = true
		
        targetBody1 = @validBodies1.Random()
    }
	
	// Target any body without atmosphere that has been landed on.
	DATA
    {
        name = bodieslist
		title = bodieslist
		type = List<CelestialBody>
        hidden = true

        validBodies = LandedBodies().Where(cb => (cb.IsPlanet() || cb.IsMoon()) && cb != HomeWorld())
		validBodies1 = @validBodies.Where(cb => !cb.HasAtmosphere())
    }
	
    // Hardcoded list of specific experiments
    //DATA
    //{
    //  title = experimentslist
	//	type = List<ScienceExperiment>
    //  hidden = true
	//
    //  experiments = [bd_ionElec, bd_UVspec, logIonTrap, bd_magScan]
    //}
	
	// Select 4 situations in LowSpace to do science.
    //DATA
	//{
	//	type = List<ScienceSubject>
    //  hidden = true
	//
    //  scienceSubjectsTemp1 = AllScienceSubjectsByBodyExperiment([@targetBody], @experiments)
	//	scienceSubjectsTemp2 = @scienceSubjectsTemp1.Where(s => !s.Biome().IsKSC())
	//	scienceSubjectsTemp3 = @scienceSubjectsTemp2.Where(s => s.Situation() == InSpaceLow)
    //  scienceSubjects = @scienceSubjectsTemp3.Random(4)
    //}
	
	//The possible biomes for the target body.
    //DATA
    //{
    //	title = biomelist
	//	type = List<Biome>
    //  biomes = @targetBody.Biomes()
    //  hidden = true
    //}
	
	// Science recovery: transmit, recover, or ideal.
    //DATA
    //{
	//	type = ScienceRecoveryMethod
    //  hidden = true
    //  recoveryMethod = Transmit
    //}

	BEHAVIOUR
	{
		name = WaypointGenerator
		type = WaypointGenerator

		RANDOM_WAYPOINT
		{
			name = Kane Landing Site
			hidden = False
			targetBody = @/targetBody
			count = 1
			icon = marker
			altitude = 0.0
			waterAllowed = false
			forceEquatorial = false
		}
	}
	
	PARAMETER
	{
		name = Kane
		type = VesselParameterGroup
		title = Launch the manned Kane to @targetBody
		define = Kane

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			hidden = true
		}

		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew 
			minCrew = 1
			maxCrew = 3
			title = Take along 3 crew members, be sure to include 2 pilots
		}

		PARAMETER
        {
            name = IsNotVessel
            type = IsNotVessel
			hidden = true
            vessel = Kane-LM
        }
		
		PARAMETER
        {
            name = IsNotVessel
            type = IsNotVessel
			hidden = true
            vessel = Kane-PFS
        }
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = Must have a docking port
			partModule = ModuleDockingNode
		}

		PARAMETER
		{
			name = Orbit
			type = Orbit
			targetBody = @/targetBody
			maxApA = 0.4 * @/targetBody.Radius()
			maxPeA = 0.2 * @/targetBody.Radius()
			minEccentricity = 0.07
			title = Establish a low, elliptic orbit around @targetBody
			disableOnStateChange = true
		}
	}

	PARAMETER
	{
		name = Kane-LM
		type = VesselParameterGroup
		title = Separate the LM from Kane in orbit of @/targetBody, land it near the waypoint and return to Kane
		define = Kane-LM

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			hidden = true
		}

		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew 
			minCrew = 0
			maxCrew = 2
			title = The LM must be crewed after launch to be able to perform its mission
		}

		PARAMETER
        {
            name = IsNotVessel
            type = IsNotVessel
			hidden = true
            vessel = Kane
        }
		
		PARAMETER
        {
            name = IsNotVessel
            type = IsNotVessel
			hidden = true
            vessel = Kane-PFS
        }
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = Must have a docking port
			partModule = ModuleDockingNode
		}
		
		PARAMETER
		{
			name = OrbitB
			type = Orbit
			targetBody = @/targetBody
			maxApA = 0.2 * @/targetBody.Radius()
			maxPeA = 0.1 * @/targetBody.Radius()
			disableOnStateChange = true
			title = Have the LM pass at low altitude before landing
		}
		
		PARAMETER
		{
			name = ReachState
			type = ReachState
			targetBody = @/targetBody
			situation = LANDED
			disableOnStateChange = true
		}
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 0
			distance = 1000.0
			title = Land near the indicated area
			disableOnStateChange = true
		}
	}
	
	PARAMETER
	{
		name = CollectScienceA
		type = CollectScience
		targetBody = @/targetBody
		situation = SrfLanded
		experiment = [crewReport, evaReport, surfaceSample]
		recoveryMethod = Ideal
		title = Report the crew's findings from the surface and take a sample
		disableOnStateChange = true
	}
	
	PARAMETER
	{
		name = CollectScienceB
		type = CollectScience
		targetBody = @/targetBody
		situation = SrfLanded
		recoveryMethod = Recover
		experiment = [bd_camera, bd_massSpec, bd_magScan]
		title = Recover various additional photos and samples of the surface
		disableOnStateChange = true
	}
	
	PARAMETER
	{
		name = PlantFlag
		type = PlantFlag
		targetBody = @/targetBody
		title = Plant a flag on the surface of @/targetBody
	}

	PARAMETER
	{
		name = Kane-PFS
		type = VesselParameterGroup
		title = Launch the Kane-PFS subsatellite into orbit of @/targetBody from Kane
		define = Kane-PFS

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			hidden = true
		}

		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew 
			minCrew = 0
			maxCrew = 0
		}

		PARAMETER
        {
            name = IsNotVessel
            type = IsNotVessel
			hidden = true
            vessel = Kane
        }
		
		PARAMETER
        {
            name = IsNotVessel
            type = IsNotVessel
			hidden = true
            vessel = Kane-LM
        }
		
		PARAMETER
		{
			name = OrbitC
			type = Orbit
			targetBody = @/targetBody
			maxApA = 0.4 * @/targetBody.Radius()
			maxPeA = 0.2 * @/targetBody.Radius()
			disableOnStateChange = true
			title = Release Kane-PFS into a similar orbit as established by the main spacecraft
		}
		
		PARAMETER
		{
			name = CollectScienceC
			type = CollectScience
			targetBody = @/targetBody
			situation = InSpaceLow
			recoveryMethod = Transmit
			experiment = gravityScan
			title = Take gravimetric readings around @targetBody
			disableOnStateChange = true
		}
	}

	PARAMETER
	{
		name = ReturnHome
		type = ReturnHome
		title = Return Kane and its crew home safely
	}
	
	//Gemini and Ranger Block 2 missions must have been completed before and target body must have been landed on with a probe AND flown by with a crew before.
	REQUIREMENT
	{
		name = All
		type = All
		
		REQUIREMENT
		{
			name = Landing
			type = Landing
			targetBody = @/targetBody
		}
		
		REQUIREMENT
		{
			name = FlyBy
			type = FlyBy
			targetBody = @/targetBody
		}
		
		REQUIREMENT
		{
			name = CompleteContract
			type = CompleteContract
			contractType = BDB_Gemini
			minCount = 1
			cooldownDuration = 0d
		}
		
		REQUIREMENT
		{
			name = CompleteContract
			type = CompleteContract
			contractType = BDB_Ranger_Block2
			minCount = 1
			cooldownDuration = 0d
		}
	}
	
	// This requirement specifies the nodes that the parts with the required experiments currently reside in. Deliberately not specifying particular parts, so any part with the experiment can be used. If all applicable parts get placed to later nodes, could lead to issues however.
    REQUIREMENT
	{	
		name = AllB
		type = All
		
		REQUIREMENT
		{
			name = TechResearchedA
			type = TechResearched
			tech = advLanding
		}
		
		REQUIREMENT
		{
			name = TechResearchedB
			type = TechResearched
			tech = heavierRocketry
		}
	}
}